/**
 * Automatically generated by {@link Script}
 *
 * @see {@link https://github.com/jslno/node-zugferd/blob/main/packages/node-zugferd/scripts/codelists/hybrid-version/output.xml|Source}
 */

import type Script from "../../scripts/codelists/hybrid-version/index.ts";

export type HybridVersionDefinition = {
	value: string;
	definition: string;
	usage: string;
};
export type HybridVersionCode = (typeof HYBRID_VERSION)[number]["value"];

export const PUBLISHED = "Factur-X" as const;

/**
 * Automatically generated by {@link Script}
 *
 * @see {@link https://github.com/jslno/node-zugferd/blob/main/packages/node-zugferd/scripts/codelists/hybrid-version/output.xml|Source}
 */
export const HYBRID_VERSION = [
	{
		value: "1.0",
		definition: "The hybrid document is a Factur-X 1.0* compliant document",
		usage: "Default value for current specification",
	},
	{
		value: "1p0",
		definition: "The hybrid document is a ZUGFeRD 1p0 compliant document",
		usage:
			"Legacy use only. A warning is given if used for a document in the validity period of the current specification",
	},
	{
		value: "2p0",
		definition: "The hybrid document is a ZUGFeRD 2p0 compliant document",
		usage:
			"Legacy use only. A warning is given if used for a document in the validity period of the current specification",
	},
	{
		value: "2p1",
		definition: "The hybrid document is a ZUGFeRD 2p1 compliant document",
		usage:
			"Legacy use only. A warning is given if used for a document in the validity period of the current specification",
	},
	{
		value: "2p2",
		definition: "The hybrid document is a ZUGFeRD 2p2 compliant document",
		usage:
			"Legacy use only. A warning is given if used for a document in the validity period of the current specification",
	},
] as const satisfies HybridVersionDefinition[];

export const hybridVersionCode = HYBRID_VERSION.map(({ value }) => value);
