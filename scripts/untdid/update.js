const fs = require("fs/promises");
const path = require("path");
const { Biome } = require("@biomejs/js-api/nodejs");
const { toScreamingSnakeCase } = require("../utils");

const main = async () => {
  const registryData = await fs.readFile(
    path.resolve(__dirname, "./registry.json")
  );

  const biome = new Biome();
  const { projectKey } = biome.openProject(".");

  for (const entry of JSON.parse(registryData.toString("utf-8"))) {
    console.info(
      `
Updating UNTDID ${entry.id}
from ${entry.source}
`
    );

    const res = await fetch(new URL(entry.source).toString(), {
      method: "GET",
    });

    const data = await res.json();

    if (!data["daten"] || !data["metadaten"]) {
      throw new Error("Invalid response");
    }

    const identifier = data["metadaten"]["kennungInhalt"];
    const version = data["metadaten"]["version"];
    const mappedData = data["daten"].map(([code, name, description]) => {
      const formattedCode = JSON.stringify(code);
      const formattedName = !!name ? JSON.stringify(name) : "undefined";
      const formattedDescription = !!description
        ? JSON.stringify(description)
        : "undefined";

      return `{ key:${JSON.stringify(toScreamingSnakeCase(name))}, code:${formattedCode}, name:${formattedName}, description:${formattedDescription}, },`;
    });

    const content = `/**
 * Generated by ${"`"}scripts/untdid/update.js${"`"} on ${new Date().toUTCString()}
 * 
 * @see ${entry.see}
 */

export type Untdid${entry.id}Definition = {
  key: string;
  code: string;
  name?: string;
  description?: string;
};

export type Untdid${entry.id}Code = (typeof UNTDID_${entry.id})[number]["code"];

export const UNTDID_${entry.id}_IDENTIFIER = "${identifier}" as const;
export const UNTDID_${entry.id}_VERSION = "${version}" as const;

export const UNTDID_${entry.id} = [${mappedData.join("")}${
      mappedData.length > 0 ? "\n" : ""
    }] as const satisfies Untdid${entry.id}Definition[];
`;

    const filename = `${entry.id}.gen.ts`;

    await fs.writeFile(
      `./packages/node-zugferd/src/codelists/untdid/${filename}`,
      biome.formatContent(projectKey, content, { filePath: filename }).content
    );

    console.log(`Finished Updating UNTDID ${entry.id}`);
  }
};

void main();
