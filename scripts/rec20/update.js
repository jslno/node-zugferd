const fs = require("fs/promises");
const { Biome } = require("@biomejs/js-api/nodejs");
const { toScreamingSnakeCase } = require("../utils");

const source =
  "https://www.xrepository.de/api/xrepository/urn:xoev-de:kosit:codeliste:rec20_3/download/UN_ECE_Recommendation_N_20_3.json";

const main = async () => {
  console.info(
    `
Updating UN/ECE Recommendation N°20
from ${source}
`
  );

  const res = await fetch(new URL(source).toString(), {
    method: "GET",
  });

  const data = await res.json();

  if (!data["daten"] || !data["metadaten"]) {
    throw new Error("Invalid response");
  }

  const identifier = data["metadaten"]["kennungInhalt"];
  const version = data["metadaten"]["version"];
  const mappedData = data["daten"].map(([code, name]) => {
    const formattedCode = JSON.stringify(code);
    const formattedName = name !== null ? JSON.stringify(name) : "undefined";

    return `{ key:${JSON.stringify(toScreamingSnakeCase(name))}, code: ${formattedCode}, name:${formattedName}, },`;
  });

  const biome = new Biome();
  const { projectKey } = biome.openProject(".");

  const content = `/**
 * Generated by ${"`"}scripts/rec20/update.js${"`"} on ${new Date().toUTCString()}
 * 
 * @see https://www.xrepository.de/details/urn:xoev-de:kosit:codeliste:rec20
 */

import { createEnum } from ".";

export type Rec20Definition = {
  key: string;
  code: string;
  name: string;
};

export type Rec20Code = (typeof REC20)[number]["code"];

export const REC20_IDENTIFIER = "${identifier}" as const;
export const REC20_VERSION = "${version}" as const;

export const REC20 = [${mappedData.join("")}${
    mappedData.length > 0 ? "\n" : ""
  }] as const satisfies Rec20Definition[];

export const Rec20 = createEnum(REC20, {
  keyProp: "key",
  valueProp: "code",
});
`;

  const filename = "rec20.gen.ts"

  await fs.writeFile(`./packages/node-zugferd/src/codelists/${filename}`, biome.formatContent(projectKey, content, { filePath: filename }).content);

  console.log(`Finished Updating UN/ECE Recommendation N°20`);
};

void main();
